#X3D V3.2 utf8
PROFILE Interchange
COMPONENT Texturing:2
COMPONENT CADGeometry:1

# ----------------------------------------------------------------------------
# Use MultiTexture with 1 texture, normal TextureTransform and TextureCoordinate.
# Should look just normal, like without multitexturing.

Shape {
  appearance Appearance {
    texture MultiTexture {
      texture ImageTexture { url "../textures/test_texture.png" }
    }
    textureTransform TextureTransform { scale 2 2 }
    material Material { }
  }
  geometry IndexedQuadSet {
    coord Coordinate { point [ 0 0 0, 1 0 0, 1 1 0, 0 1 0,
                               0 2 0, 1 2 0, 1 3 0, 0 3 0 ] }
    index [ 0 1 2 3, 4 5 6 7 ]
    texCoord TextureCoordinate {
      point [ 0 0, 1 0, 1 1, 0 1,
              0 0, 1 0, 1 1, 0 1, ]
    }
    solid FALSE
  }
}

# ----------------------------------------------------------------------------
# Use MultiTexture, MultiTextureTransform, MultiTextureCoordinate with 1 texture.
# Should look just normal, like without multitexturing.

Transform {
  translation 2 0 0
  children Shape {
    appearance Appearance {
      texture MultiTexture {
        texture ImageTexture { url "../textures/test_texture.png" }
      }
      textureTransform MultiTextureTransform {
        textureTransform TextureTransform { scale 2 2 }
      }
      material Material { }
    }
    geometry IndexedQuadSet {
      coord Coordinate { point [ 0 0 0, 1 0 0, 1 1 0, 0 1 0,
                                 0 2 0, 1 2 0, 1 3 0, 0 3 0 ] }
      index [ 0 1 2 3, 4 5 6 7 ]
      texCoord MultiTextureCoordinate {
        texCoord TextureCoordinate {
          point [ 0 0, 1 0, 1 1, 0 1, 0 0, 1 0, 1 1, 0 1, ]
        }
      }
      solid FALSE
    }
  }
}

# ----------------------------------------------------------------------------
# Simple 2 textures test.

Transform {
  translation 4 0 0
  children Shape {
    appearance Appearance {
      texture MultiTexture {
        texture [
          ImageTexture { url "../textures/test_texture.png" }
          ImageTexture { url "../textures/brick031.jpg" }
        ]
      }
      # This TextureTransform *should* be ignored (that is, both
      # texture units should have idenity transform) following X3D spec:
      # "If using a MultiTexture node with a geometry node without
      # a MultiTextureTransform node, identity matrices are assumed for all channels."
      textureTransform TextureTransform { scale 2 2 }
      material Material { }
    }
    geometry IndexedQuadSet {
      coord Coordinate { point [ 0 0 0, 1 0 0, 1 1 0, 0 1 0,
                                 0 2 0, 1 2 0, 1 3 0, 0 3 0 ] }
      index [ 0 1 2 3, 4 5 6 7 ]
      texCoord TextureCoordinate {
        point [ 0 0, 1 0, 1 1, 0 1,
                0 0, 1 0, 1 1, 0 1, ]
      }
      solid FALSE
    }
  }
}

# ----------------------------------------------------------------------------
# Simple 2 textures with different transforms test.

Transform {
  translation 6 0 0
  children Shape {
    appearance Appearance {
      texture MultiTexture {
        texture [
          ImageTexture { url "../textures/test_texture.png" }
          ImageTexture { url "../textures/brick031.jpg" }
        ]
      }
      textureTransform MultiTextureTransform {
        textureTransform [
          TextureTransform { scale 2 2 }
          TextureTransform { scale 4 4 }
        ]
      }
      material Material { }
    }
    geometry IndexedQuadSet {
      coord Coordinate { point [ 0 0 0, 1 0 0, 1 1 0, 0 1 0,
                                 0 2 0, 1 2 0, 1 3 0, 0 3 0 ] }
      index [ 0 1 2 3, 4 5 6 7 ]
      texCoord TextureCoordinate {
        point [ 0 0, 1 0, 1 1, 0 1,
                0 0, 1 0, 1 1, 0 1, ]
      }
      solid FALSE
    }
  }
}

# ----------------------------------------------------------------------------
# Simple 2 textures with different coords test.

Transform {
  translation 8 0 0
  children Shape {
    appearance Appearance {
      texture MultiTexture {
        texture [
          ImageTexture { url "../textures/test_texture.png" }
          ImageTexture { url "../textures/brick031.jpg" }
        ]
      }
      textureTransform MultiTextureTransform {
        textureTransform [
          TextureTransform { scale 2 2 }
        ]
      }
      material Material { }
    }
    geometry IndexedQuadSet {
      coord Coordinate { point [ 0 0 0, 1 0 0, 1 1 0, 0 1 0,
                                 0 2 0, 1 2 0, 1 3 0, 0 3 0 ] }
      index [ 0 1 2 3, 4 5 6 7 ]
      texCoord MultiTextureCoordinate {
        texCoord [
          TextureCoordinate { point [ 0 0, 1 0, 1 1, 0 1, 0 0, 1 0, 1 1, 0 1, ] }
          TextureCoordinate { point [ 0 0.5, 1 0.5, 1 1, 0 1, 0 0.5, 1 0.5, 1 1, 0 1, ] }
        ]
      }
      solid FALSE
    }
  }
}

# ----------------------------------------------------------------------------
# 2 textures: ImageTexture + MovieTexture. Different wrap modes.

Transform {
  translation 10 0 0
  children Shape {
    appearance Appearance {
      texture MultiTexture {
        mode [ "MODULATE", "ADD" ]
        texture [
          ImageTexture {
            url "../textures/test_texture.png"
            repeatS TRUE
            repeatT TRUE
          }
          MovieTexture {
            url [ "../vrml_2/movie_texture/flame/seamless/%4d.png"
                  "../vrml_2/movie_texture/flame/flame_seamless_compressed.avi" ]
            repeatS FALSE
            repeatT FALSE
            loop TRUE
          }
        ]
      }
      textureTransform MultiTextureTransform {
        textureTransform [
          TextureTransform { scale 2 2 }
          # not specified, so 2nd transform should be used as identity
        ]
      }
      material Material { }
    }
    geometry IndexedQuadSet {
      coord Coordinate { point [ 0 0 0, 1 0 0, 1 1 0, 0 1 0,
                                 0 2 0, 1 2 0, 1 3 0, 0 3 0 ] }
      index [ 0 1 2 3, 4 5 6 7 ]
      texCoord TextureCoordinate {
        point [ 0 0, 1 0, 1 1, 0 1,
                0 0, 1 0, 1 1, 0 1, ]
      }
      solid FALSE
    }
  }
}

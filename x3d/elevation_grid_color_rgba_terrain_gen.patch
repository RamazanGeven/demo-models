diff --git a/castle_game_engine/examples/vrml/terrain/terrain.lpr b/castle_game_engine/examples/vrml/terrain/terrain.lpr
index 1ca43fe..8b0d493 100644
--- a/castle_game_engine/examples/vrml/terrain/terrain.lpr
+++ b/castle_game_engine/examples/vrml/terrain/terrain.lpr
@@ -478,7 +478,7 @@ procedure MenuCommand(Window: TCastleWindow; Item: TMenuItem);
     TexRock: TNodeImageTexture;
     Part: TNodeShaderPart;
     Appearance: TNodeAppearance;
-    Color: TNodeColor;
+    Color: TNodeColorRGBA;
   begin
     CountSteps := 1 shl Subdivision + 1;
     Size := BaseSize * 2;
@@ -504,7 +504,7 @@ procedure MenuCommand(Window: TCastleWindow; Item: TMenuItem);
       Grid.FdZSpacing.Value := Size / (CountSteps - 1);
       Grid.FdHeight.Items.Count := CountSteps * CountSteps;
 
-      Color := TNodeColor.Create('', '');
+      Color := TNodeColorRGBA.Create('', '');
       Grid.FdColor.Value := Color;
       Color.FdColor.Items.Count := CountSteps * CountSteps;
 
@@ -516,7 +516,12 @@ procedure MenuCommand(Window: TCastleWindow; Item: TMenuItem);
             MapRange(Z, 0, CountSteps, MinZ, MaxZ));
 
           Color.FdColor.Items.Items[X + Z * CountSteps] :=
-            ColorFromHeight(Elevation, Grid.FdHeight.Items[X + Z * CountSteps]);
+            Vector4Single(
+              ColorFromHeight(Elevation, Grid.FdHeight.Items[X + Z * CountSteps]),
+              Min(Sqrt(
+                Sqr(MapRange(X, 0, CountSteps, -1, 1)) +
+                Sqr(MapRange(Z, 0, CountSteps, -1, 1))
+              ), 1));
         end;
 
       Appearance := TNodeAppearance.Create('', '');

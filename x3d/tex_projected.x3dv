#X3D V3.2 utf8
PROFILE Interchange

# Projective texturing.
# Test both with and without GLSL versions.

NavigationInfo {
  type [ "EXAMINE", "ANY" ]
  headlight TRUE
}

KambiHeadLight {
  intensity 0.2
}

EXTERNPROTO TesselatedPlane [
  inputOutput SFNode texCoord
] [ "tesselated_plane.wrl#TesselatedPlane" ]

# spot test ------------------------------------------------------------------

DEF MySpot SpotLight {
  location -0 0 3 direction 0.5 0.5 -1
  # for shadow_maps_x3d paper I used here cutOffAngle 0.4
}

Shape {
  appearance Appearance {
    material Material { }
    texture DEF Tex ImageTexture {
      url "../textures/test_texture.png"
      repeatS FALSE
      repeatT FALSE
    }
  }
  geometry TesselatedPlane {
    texCoord TextureCoordinateGenerator {
      mode "PROJECTION"
      projectedLight USE MySpot
    }
  }
}

# directional test -----------------------------------------------------------

Transform {
  translation 20 0 0
  children [
    DEF MyDir DirectionalLight {
      direction -1 0 0
      projectionLocation 0 0 1
      projectionRectangle -2 2 -2 2
    }

    Shape {
      appearance Appearance {
        material Material { }
        texture USE Tex
      }
      geometry TesselatedPlane {
        texCoord TextureCoordinateGenerator {
          mode "PROJECTION"
          projectedLight USE MyDir
        }
      }
    }
  ]
}

# ----------------------------------------------------------------------------
# Just for test, now do exactly the same thing but using GLSL shader
# to access projection texture.

Transform {
  translation 0 20 0

  children [

    # spot test ------------------------------------------------------------------

    DEF MySpot SpotLight {
      location -0 0 3 direction 0.5 0.5 -1
    }

    Shape {
      appearance Appearance {
        material Material { }
        texture USE Tex
        shaders DEF ProjShader ComposedShader {
          language "GLSL"
          initializeOnly SFInt32 tex 0
          parts ShaderPart { type "FRAGMENT" url "tex_projected.fs" }
        }
      }
      geometry TesselatedPlane {
        texCoord TextureCoordinateGenerator {
          mode "PROJECTION"
          projectedLight USE MySpot
        }
      }
    }

    # directional test -----------------------------------------------------------

    Transform {
      translation 20 0 0
      children [
        DEF MyDir DirectionalLight {
          direction -1 0 0
          projectionLocation 0 0 1
          projectionRectangle -2 2 -2 2
        }

        Shape {
          appearance Appearance {
            material Material { }
            texture USE Tex
            shaders USE ProjShader
          }
          geometry TesselatedPlane {
            texCoord TextureCoordinateGenerator {
              mode "PROJECTION"
              projectedLight USE MyDir
            }
          }
        }
      ]
    }

  ]
}

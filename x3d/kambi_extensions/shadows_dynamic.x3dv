#X3D V3.2 utf8
PROFILE Interchange

# Camera settings "encoded" in the VRML declaration below :
# direction -0.0039148419164121 -0.0134819848462939 -0.01424465700984
# up -0.1786381602287292 0.7386409640312194 -0.6499983668327331
# gravityUp 0 1 0
Viewpoint {
  position -0.5356798768043518 0.699147880077362 0.5529592037200927
  orientation -0.9368800520896911 0.3260054588317871 0.1263976395130157 0.784756064414978
}

NavigationInfo {
  type [ "FLY" "ANY" ]
}

Shape{
  geometry Box { solid FALSE size 2.4 2.4 2.4 }
  appearance Appearance { material Material { } }
}

Transform {
  scale 0.1 0.1 0.1
  translation -0.5 0 -0.5
  rotation 0 0 1 1.57
  children Inline { url "../worm_crawl.x3dv" }
}

DEF Light PointLight {
  location 0 1 0
  kambiShadows TRUE
  kambiShadowsMain TRUE
}
DEF LightIndicator Transform {
  translation 0 1 0
  children Shape {

# For displaying shadows, this sphere must be hidden, otherwise it casts
# shadows and then whole scene is in shadow... TODO: a field to mark
# particular shapes as not shadow casters would be useful here.

#    geometry Sphere { radius 0.1 }
    appearance Appearance { material Material { diffuseColor 1 1 0 } }
  }
}
DEF Timer TimeSensor { loop TRUE cycleInterval 10000000 }

DEF Scr Script {
  inputOnly SFTime elapsedTime
  outputOnly SFVec3f mainLightLoc
  url "kambiscript:

{ We animate light location by script, as opposed to placing light within
  a transform and rotating that transform. Reason: Kambi VRML game engine
  is not optimized now for animating light's transform (but it's optimized
  for animating light's location). }

function elapsedTime(value, timestamp)
  mainLightLoc := vector(
    sin(value) * 0.3,
    1,
    cos(value) * 0.3)
"
}
ROUTE Timer.elapsedTime TO Scr.elapsedTime
ROUTE Scr.mainLightLoc TO Light.location
#ROUTE Scr.mainLightLoc TO LightIndicator.translation

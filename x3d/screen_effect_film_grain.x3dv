#X3D V3.2 utf8
PROFILE Interchange

# Demo that passing MovieTexture to ScreenEffect shaders works.
# See http://vrmlengine.sourceforge.net/kambi_vrml_extensions_screen_effects.php
# for ScreenEffect docs.

Background {
  skyColor 0.98 0.77 0.77
}

# Camera settings "encoded" in the VRML declaration below :
# direction 0 0.700684607028961 0.000241928064497
# up 0 -0.000345317530446 0.999999940395355
# gravityUp 0 0 1
Transform {
  translation 0.004618315026164 -94.837326049804687 6.33106803894043
  rotation 1 0 0 1.570796370506287
  children Viewpoint {
    position 0 0 0 # camera position is expressed by translation
    orientation 0 0 1 0
  }
}

NavigationInfo {
  type "WALK"
  speed 20
  avatarSize [ 0.5 4 ]
}

Inline { url "../vrml_2/castle_with_lights.wrl" }

ScreenEffect { shaders DEF Shader ComposedShader {
  inputOutput SFNode grainTexture MovieTexture {
    url "../textures/noise%d.png"
    speed 0.8
    loop TRUE
    repeatS TRUE
    repeatT TRUE
  }
  language "GLSL"
  parts ShaderPart { type "FRAGMENT" url "
#extension GL_ARB_texture_rectangle : enable
uniform sampler2DRect screen;
uniform sampler2D grainTexture;

const vec2 grainTextureSize = vec2(256.0, 256.0);

/* Adjust this as you like, larger values -> grain is less noticeable */
const float strength = 25.0;

void main (void)
{
  gl_FragColor = texture2DRect(screen, gl_TexCoord[0].st);

  vec2 grainCoord = gl_TexCoord[0].st / grainTextureSize;

  float grain = (
    (texture2D(grainTexture, grainCoord).r +
     texture2D(grainTexture, grainCoord / 2.0).r +
     texture2D(grainTexture, grainCoord / 4.0).r)
     - 3.0 / 2.0 /* -0.5 for each noise layer. Beware of float consts on crappy Radeon fglrx */
    ) / strength;

  gl_FragColor.rgb += vec3(grain, grain, grain);
}
" } } }

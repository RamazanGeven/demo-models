#X3D V3.2 utf8
PROFILE Interchange

# Test of textures inlining using PixelTexture.
# This way texture content can be specified
# directly in the VRML/X3D file.
#
# Note: There is an alternative way to embed texture content
# in the VRML/X3D file: using the "data URI".
# A demo of it is inside ../x3d/data_uri.x3dv file.

Group {
  children [
    # first test shape:
    # grayscale (1 component) texture 2x2 pixels :
    #    white light
    #    black dark
    Shape {
      appearance Appearance {
        material DEF EmptyMaterial Material { }

        texture PixelTexture {
          image 2 2 1  0 0x50 0xFF 0xA0
          # Use TextureProperties to have "NEAREST_PIXEL" filtering,
          # instead of the default bilinear (X3D calls it "AVG_PIXEL").
          # In this case, for a very small textures, "NEAREST_PIXEL" looks better.
          textureProperties DEF MyTextureProperties TextureProperties {
            magnificationFilter "NEAREST_PIXEL"
          }
        }
      }
      geometry Box { }
    }

    # now rgb (3 components) 4x3 pixels :
    Transform {
      translation +3 0 0
      children Shape {
        appearance Appearance {
          material USE EmptyMaterial
          texture DEF Tex1 PixelTexture {
            image 4 3 3
              0xFF0000 0xFFFFFF 0xFFFFFF 0x0000FF  # bottom row : red white white blue
              0 0x00FF00 0x00FF00 0 # middle row : black green green black
              0xFFFF00 0x00FFFF 0x00FFFF 0xFF00FF # top row : yellow something something something
            textureProperties USE MyTextureProperties
          }
        }
        geometry Box { }
      }
    }

    # same as above but scaled
    Transform {
      translation +6 0 0
      children Shape {
        appearance Appearance {
          material USE EmptyMaterial
          texture USE Tex1
          textureTransform TextureTransform { scale 2 2 }
        }
        geometry Box { }
      }
    }

    # now grayscale with alpha (2 components).
    #    transparent light
    #    black transparent
    Transform {
      translation +9 0 0
      children Shape {
        appearance Appearance {
          material USE EmptyMaterial
          texture PixelTexture {
            image 2 2 2
              0x00FF 0x5000
              0xFF00 0xA0FF
            textureProperties USE MyTextureProperties
          }
        }
        geometry Box { }
      }
    }

    # now rgb with alpha. Only corners are visible, rest is transparent.
    # In my view3dscene you should now see clearly that texture 4x3 is actually
    # resized to 4x4 before giving it to OpenGL. This is an OpenGL requirement
    # and so this is a limitation in my view3dscene.
    Transform {
      translation +12 0 0
      children Shape {
        appearance Appearance {
          material USE EmptyMaterial
          texture PixelTexture {
            image 4 3 4
              0xFF0000FF 0xFFFFFF00 0xFFFFFF00 0x0000FFFF
              0 0x00FF0000 0x00FF0000 0
              0xFFFF00FF 0x00FFFF00 0x00FFFF00 0xFF00FFFF
            textureProperties USE MyTextureProperties
          }
        }
        geometry Box { }
      }
    }
  ]
}

# --------------------------------------------------------------------------
# second row : all the same as the first (top) one but now all
# textures have repeat FALSE in both directions.
# In my view3dscene you should now see that texture colors are differently
# interpolated at the borders.
# And the cube with scaled texture coordinates on it
# looks different now (scaling coordinates doesn't mean scaling the texture
# if repeat is FALSE)

Transform {
  translation 0 -3 0
  children [
    Shape {
      appearance Appearance {
        material USE EmptyMaterial
        texture PixelTexture {
          image 2 2 1
            0 0x50
            0xFF 0xA0
          repeatS FALSE
          repeatT FALSE
          textureProperties USE MyTextureProperties
        }
      }
      geometry Box { }
    }

    Transform {
      translation +3 0 0
      children Shape {
        appearance Appearance {
          material USE EmptyMaterial
          texture DEF Tex1 PixelTexture {
            image 4 3 3
              0xFF0000 0xFFFFFF 0xFFFFFF 0x0000FF
              0 0x00FF00 0x00FF00 0
              0xFFFF00 0x00FFFF 0x00FFFF 0xFF00FF
            repeatS FALSE
            repeatT FALSE
            textureProperties USE MyTextureProperties
          }
        }
        geometry Box { }
      }
    }

    Transform {
      translation +6 0 0
      children Shape {
        appearance Appearance {
          material USE EmptyMaterial
          texture USE Tex1
          textureTransform TextureTransform { scale 2 2 }
        }
        geometry Box { }
      }
    }

    Transform {
      translation +9 0 0
      children Shape {
        appearance Appearance {
          material USE EmptyMaterial
          texture PixelTexture {
            image 2 2 2  0x00FF 0x5000 0xFF00 0xA0FF
            repeatS FALSE
            repeatT FALSE
            textureProperties USE MyTextureProperties
          }
        }
        geometry Box { }
      }
    }

    Transform {
      translation +12 0 0
      children Shape {
        appearance Appearance {
          material USE EmptyMaterial
          texture PixelTexture {
            image 4 3 4
              0xFF0000FF 0xFFFFFF00 0xFFFFFF00 0x0000FFFF
              0 0x00FF0000 0x00FF0000 0
              0xFFFF00FF 0x00FFFF00 0x00FFFF00 0xFF00FFFF
            repeatS FALSE
            repeatT FALSE
            textureProperties USE MyTextureProperties
          }
        }
        geometry Box { }
      }
    }
  ]
}

# --------------------------------------------------------------------------
# third row: tired of cubes ? Lets put these textures on some other things.

Transform {
  translation 0 -6 0
  children [
    Shape {
      appearance Appearance {
        material USE EmptyMaterial
        texture PixelTexture {
          image 2 2 1  0 0x50 0xFF 0xA0
          repeatS FALSE
          repeatT FALSE
          textureProperties USE MyTextureProperties
        }
      }
      geometry Cone { }
    }

    Transform {
      translation +3 0 0
      children Shape {
        appearance Appearance {
          material USE EmptyMaterial
          texture DEF Tex1 PixelTexture {
            image 4 3  3
              0xFF0000 0xFFFFFF 0xFFFFFF 0x0000FF
              0 0x00FF00 0x00FF00 0
              0xFFFF00 0x00FFFF 0x00FFFF 0xFF00FF
            repeatS FALSE
            repeatT FALSE
            textureProperties USE MyTextureProperties
          }
        }
        geometry Cylinder { }
      }
    }

    Transform {
      translation +6 0 0
      children Shape {
        appearance Appearance {
          material USE EmptyMaterial
          texture USE Tex1
          textureTransform TextureTransform { scale 2 2 }
        }
        geometry Cylinder { }
      }
    }

    Transform {
      translation +9 0 0
      children Shape {
        appearance Appearance {
          material USE EmptyMaterial
          texture PixelTexture {
            image 2 2 2  0x00FF 0x5000 0xFF00 0xA0FF
            repeatS FALSE
            repeatT FALSE
            textureProperties USE MyTextureProperties
          }
        }
        geometry Sphere { }
      }
    }

    Transform {
      translation +12 0 0
      children Shape {
        appearance Appearance {
          material USE EmptyMaterial
          texture PixelTexture {
            image 4 3 4
              0xFF0000FF 0xFFFFFF00 0xFFFFFF00 0x0000FFFF
              0 0x00FF0000 0x00FF0000 0
              0xFFFF00FF 0x00FFFF00 0x00FFFF00 0xFF00FFFF
            repeatS FALSE
            repeatT FALSE
            textureProperties USE MyTextureProperties
          }
        }
        geometry Cone { }
      }
    }
  ]
}

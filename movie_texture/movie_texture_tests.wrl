#VRML V2.0 utf8

EXTERNPROTO KambiNavigationInfo [
  eventIn      SFBool   set_bind
  exposedField MFFloat  avatarSize
  exposedField SFBool   headlight
  exposedField SFFloat  speed
  exposedField MFString type
  exposedField SFFloat  visibilityLimit
  eventOut     SFBool   isBound
  field        SFBool   timeOriginAtLoad
] [ "urn:castle-engine.sourceforge.net:node:KambiNavigationInfo",
    "../../../www/htdocs/fallback_prototypes.wrl#KambiNavigationInfo"
    "http://castle-engine.sourceforge.net/fallback_prototypes.wrl#KambiNavigationInfo"
]

KambiNavigationInfo {
  headlight TRUE
  type ["EXAMINE", "ANY"]
  timeOriginAtLoad TRUE
}

Transform {
  translation 0 0 0
  children Shape {
    geometry Box { }
    appearance Appearance {
      texture MovieTexture { url "test_video.avi" }
    }
  }
}

Transform {
  translation 3 0 0
  children Shape {
    geometry Box { }
    appearance Appearance {
      texture MovieTexture {
        url "test_video.avi"
        # should loop forever
        loop TRUE
      }
    }
  }
}

Transform {
  translation 0 3 0
  children Shape {
    geometry Box { }
    appearance Appearance {
      texture MovieTexture {
        url "test_video.avi"
        # should stop in the middle
        stopTime 1.0
      }
    }
  }
}

Transform {
  translation 3 3 0
  children Shape {
    geometry Box { }
    appearance Appearance {
      texture MovieTexture {
        url "test_video.avi"
        # should go to the end like normal (stopTime = 10 is more than
        # video duration (4 secs))
        stopTime 10.0
      }
    }
  }
}

Transform {
  translation 0 6 0
  children Shape {
    geometry Box { }
    appearance Appearance {
      texture MovieTexture {
        url "test_video.avi"
        # should start with delay, play 2 secs and end
        startTime 5.0
        stopTime 7.0
        loop TRUE
      }
    }
  }
}

Transform {
  translation 3 6 0
  children Shape {
    geometry Box { }
    appearance Appearance {
      texture MovieTexture {
        url "test_video.avi"
        # should loop around 2.5 times then stop
        stopTime 10.0
        loop TRUE
      }
    }
  }
}

Transform {
  translation 0 9 0
  children Shape {
    geometry Box { }
    appearance Appearance {
      texture MovieTexture {
        url "test_video.avi"
        # should pause after 1 second
        pauseTime 1.0
        # There's no way to test resumeTime without events/routes implemented,
        # since pauseTime works only when it's > resumeTime and resumeTime
        # works only when paused and resumeTime > pauseTime... So some
        # event that changes resumeTime / pauseTime is needed to actually
        # see resumeTime at work.
        #resumeTime 15.0
      }
    }
  }
}

Transform {
  translation 3 9 0
  children Shape {
    geometry Box { }
    appearance Appearance {
      texture MovieTexture {
        url "test_video.avi"
        # should pause after 2.5 loops
        pauseTime 10.0
        loop TRUE
        # There's no way to test resumeTime without events/routes implemented,
        # since pauseTime works only when it's > resumeTime and resumeTime
        # works only when paused and resumeTime > pauseTime... So some
        # event that changes resumeTime / pauseTime is needed to actually
        # see resumeTime at work.
        #resumeTime 15.0
      }
    }
  }
}

# ----------------------------------------------------------------------------
# 3,4,5 columns, with speed tests.
# 3rd column has positive speed tests,
# 4th has negative tests,
# 5th has speed = 0 test.

Transform {
  translation 8 1 0
  children Shape {
    geometry Box { }
    appearance Appearance {
      texture MovieTexture {
        url "test_video.avi"
        # plays 4 times slower
        speed 0.25
      }
    }
  }
}

Transform {
  translation 12 1 0
  children Shape {
    geometry Box { }
    appearance Appearance {
      texture MovieTexture {
        url "test_video.avi"
        # plays 4 times slower
        speed -0.25
      }
    }
  }
}

Transform {
  translation 8 4 0
  children Shape {
    geometry Box { }
    appearance Appearance {
      texture MovieTexture {
        url "test_video.avi"
        # should loop forever, playing 2 times faster
        loop TRUE
        speed 2
      }
    }
  }
}

Transform {
  translation 12 4 0
  children Shape {
    geometry Box { }
    appearance Appearance {
      texture MovieTexture {
        url "test_video.avi"
        # should loop forever, playing 2 times faster
        loop TRUE
        speed -2
      }
    }
  }
}

Transform {
  translation 8 7 0
  children Shape {
    geometry Box { }
    appearance Appearance {
      texture MovieTexture {
        url "test_video.avi"
        # should play between 5 - 15 time, playing 1.5 times faster
        loop TRUE
        speed 1.5
        startTime 5
        stopTime 15
      }
    }
  }
}

Transform {
  translation 12 7 0
  children Shape {
    geometry Box { }
    appearance Appearance {
      texture MovieTexture {
        url "test_video.avi"
        # should play between 5 - 15 time, playing 1.5 times faster
        loop TRUE
        speed -1.5
        startTime 5
        stopTime 15
      }
    }
  }
}

Transform {
  translation 15 2 0
  children Shape {
    geometry Box { }
    appearance Appearance {
      texture MovieTexture {
        url "test_video.avi"
        # should not play at all...
        loop TRUE
        speed 0
        startTime 5
        stopTime 15
      }
    }
  }
}

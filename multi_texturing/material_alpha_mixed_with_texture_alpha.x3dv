#X3D V3.0 utf8
PROFILE Interactive

# This is not a MultiTexture test, but it tests a feature related
# to some multi-texturing problems:
# how various X3D browsers mix (single) texture
# with Material.transparency and ColorRGBA node.

PointLight { location 4 4 0 }

# NavigationInfo { headlight FALSE }

# RGB texture with alpha
Transform {
  translation 0 +2 0
  children Shape {
    geometry Box { size 1 1 1 }
    appearance Appearance {
      texture ImageTexture { url "data/squirrel_alpha.png" }
    }
  }
}

# Grayscale texture with alpha
Transform {
  translation 2 +2 0
  children Shape {
    geometry Box { size 1 1 1 }
    appearance Appearance {
      texture ImageTexture { url "data/squirrel_grayscale_alpha.png" }
    }
  }
}

# RGB texture with alpha, with Material.transparency <> 0
Transform {
  translation 0 0 0
  children Shape {
    geometry Box { size 1 1 1 }
    appearance Appearance {
      material Material { transparency 0.5 }
      texture ImageTexture { url "data/squirrel_alpha.png" }
    }
  }
}

# Grayscale texture with alpha, with Material.transparency <> 0
Transform {
  translation 2 0 0
  children Shape {
    geometry Box { size 1 1 1 }
    appearance Appearance {
      material Material { transparency 0.5 }
      texture ImageTexture { url "data/squirrel_grayscale_alpha.png" }
    }
  }
}

# RGB texture with alpha, with ColorRGBA with some alpha
Transform {
  translation 0 -2 0
  children Shape {
    geometry DEF MyIFS IndexedFaceSet {
      coord Coordinate { point [ 0 0 0, 1 0 0, 1 1 0, 0 1 0 ] }
      coordIndex [ 0 1 2 3 ]
      color ColorRGBA { color [ 1 1 1 0, 1 1 1 1, 1 1 1 0, 1 1 1 1 ] }
      solid FALSE
    }
    appearance Appearance {
      material Material { }
      texture ImageTexture { url "data/squirrel_alpha.png" }
    }
  }
}

# Grayscale texture with alpha, with ColorRGBA with some alpha
Transform {
  translation 2 -2 0
  children Shape {
    geometry USE MyIFS
    appearance Appearance {
      material Material { }
      texture ImageTexture { url "data/squirrel_grayscale_alpha.png" }
    }
  }
}

# Viewpoint ------------------------------------------------------------------

# Generated by view3dscene.
# Use view3dscene "Console -> Print Current Camera..." to generate VRML/X3D code like below.
# Camera settings "encoded" in the VRML/X3D declaration below :
#   direction 0 0 -1
#   up 0 1 0
#   gravityUp 0 1 0
Viewpoint {
  position 0.765625 0.625 7.9000005722045898
  orientation 0 0 1 0
}
